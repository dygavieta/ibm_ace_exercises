/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		DECLARE InputData REFERENCE TO InputRoot.JSON.Data;
		SET Environment.array.size = InputData.size;
		
	    CREATE FIELD Environment.queue IDENTITY(JSON.Array) queue;
	    
	    SET OutputRoot.JSON.Data.queue = Environment.queue;
		RETURN TRUE;
	END;


CREATE PROCEDURE enqueue()
BEGIN
	CALL isFull() INTO Environment.isFull;
 	
 	IF NOT Environment.isFull THEN
 	-- ADD
 		DECLARE index INT CARDINALITY(Environment.queue.[]);
 	ELSE
 		SET OutputRoot.JSON.Data.message = 'QUEUE IS FULL';
 	END IF;
END;

CREATE PROCEDURE dequeue()
BEGIN
END;


CREATE PROCEDURE isEmpty() RETURNS BOOLEAN
BEGIN
	IF CARDINALITY(Environment.array.size.[]) = 0 THEN
		return TRUE;
	ELSE
		return FALSE;
	END IF;
END;

CREATE PROCEDURE isFull() RETURNS BOOLEAN
BEGIN
	IF Environment.array.size = CARDINALITY(Environment.array.size.[]) THEN
		return TRUE;
	ELSE
		return FALSE;
	END IF;	
END;

CREATE PROCEDURE peek() RETURNS CHARACTER
BEGIN
	CALL isEmpty() INTO Environment.isEmpty;
	IF NOT Environment.isEmpty THEN
		return Environment.queue.Item[1];
	END IF;
END;
